{"version":3,"sources":["UserList.js","CreateUser.js","App.js","reportWebVitals.js","index.js"],"names":["User","user","username","email","UserList","users","map","id","CreateUser","onChange","onCreate","name","placeholder","value","onClick","App","useState","inputs","setInputs","setUsers","nextId","useRef","e","target","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAEA,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,OACE,gCACE,4BAAIA,EAAKC,WADX,IACyB,qCAAQD,EAAKE,MAAb,UAedC,MAVf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,8BACGA,EAAMC,KAAI,SAAAL,GAAI,OACb,cAACD,EAAD,CAAMC,KAAMA,GAAWA,EAAKM,UCFrBC,MAVf,YAA8D,IAAxCN,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MAAOM,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC7C,OACI,gCACI,uBAAOC,KAAK,WAAWC,YAAY,qBAAMH,SAAUA,EAAUI,MAAOX,IACpE,uBAAOS,KAAK,QAAQC,YAAY,qBAAMH,SAAUA,EAAUI,MAAOV,IACjE,wBAAQW,QAASJ,EAAjB,8BCgEGK,MAnEf,WAAgB,IAAD,EACeC,mBAAS,CACnCd,SAAU,GACVC,MAAO,KAHI,mBACNc,EADM,KACEC,EADF,KAMLhB,EAAoBe,EAApBf,SAAUC,EAAUc,EAAVd,MANL,EAgBaa,mBAAS,CACjC,CACET,GAAI,EACJL,SAAU,WACVC,MAAO,6BAET,CACEI,GAAI,EACJL,SAAU,SACVC,MAAO,sBAET,CACEI,GAAI,EACJL,SAAU,MACVC,MAAO,qBA9BE,mBAgBNE,EAhBM,KAgBCc,EAhBD,KAkCPC,EAASC,iBAAO,GAmBtB,OACE,qCACE,cAAC,EAAD,CACEnB,SAAUA,EACVC,MAAOA,EACPM,SAlDW,SAAAa,GAAM,IAAD,EACIA,EAAEC,OAAlBZ,EADY,EACZA,KAAME,EADM,EACNA,MACdK,EAAU,2BACLD,GADI,kBAENN,EAAOE,MA+CNH,SAvBW,WACf,IAAMT,EAAO,CACXM,GAAIa,EAAOI,QACXtB,WACAC,SAGFgB,EAAS,GAAD,mBAAKd,GAAL,CAAYJ,KAEpBiB,EAAU,CACRhB,SAAU,GACVC,MAAO,KAGTiB,EAAOI,SAAW,KAWhB,uBACA,cAAC,EAAD,CAAUnB,MAAOA,QCtDRoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d93aed70.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction User({ user }) {\r\n  return (\r\n    <div>\r\n      <b>{user.username}</b> <span>({user.email})</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UserList({ users }) {\r\n  return (\r\n    <div>\r\n      {users.map(user => (\r\n        <User user={user} key={user.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\n\r\nfunction CreateUser({ username, email, onChange, onCreate }) {\r\n    return (\r\n        <div>\r\n            <input name=\"username\" placeholder=\"계정명\" onChange={onChange} value={username} />\r\n            <input name=\"email\" placeholder=\"이메일\" onChange={onChange} value={email} />\r\n            <button onClick={onCreate}>등록</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreateUser;","import React, { useState, useRef } from 'react';\r\nimport UserList from './UserList';\r\nimport CreateUser from './CreateUser';\r\n\r\nfunction App() {\r\n  const [inputs, setInputs] = useState({\r\n    username: '',\r\n    email: ''\r\n  });\r\n\r\n  const { username, email } = inputs;\r\n  \r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      username: 'velopert',\r\n      email: 'public.velopert@gmail.com'\r\n    },\r\n    {\r\n      id: 2,\r\n      username: 'tester',\r\n      email: 'tester@example.com'\r\n    },\r\n    {\r\n      id: 3,\r\n      username: 'liz',\r\n      email: 'liz@example.com'\r\n    }\r\n  ]);\r\n\r\n  const nextId = useRef(4);\r\n\r\n  const onCreate = () => {\r\n    const user = {\r\n      id: nextId.current,\r\n      username,\r\n      email\r\n    };\r\n\r\n    setUsers([...users, user]);\r\n\r\n    setInputs({\r\n      username: '',\r\n      email: ''\r\n    });\r\n\r\n    nextId.current += 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CreateUser \r\n        username={username}\r\n        email={email}\r\n        onChange={onChange}\r\n        onCreate={onCreate}\r\n      />\r\n      <br />\r\n      <UserList users={users}/>\r\n    </>\r\n  );    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}